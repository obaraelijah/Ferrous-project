/*
 * ferrous
 *
 * The core component of ferrous-project
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 */

/// OsType : A representation of an OS type

/// A representation of an OS type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OsType {
    #[serde(rename = "Unknown")]
    Unknown,
    #[serde(rename = "Linux")]
    Linux,
    #[serde(rename = "Windows")]
    Windows,
    #[serde(rename = "Apple")]
    Apple,
    #[serde(rename = "Android")]
    Android,
    #[serde(rename = "FreeBSD")]
    FreeBsd,

}

impl ToString for OsType {
    fn to_string(&self) -> String {
        match self {
            Self::Unknown => String::from("Unknown"),
            Self::Linux => String::from("Linux"),
            Self::Windows => String::from("Windows"),
            Self::Apple => String::from("Apple"),
            Self::Android => String::from("Android"),
            Self::FreeBsd => String::from("FreeBSD"),
        }
    }
}

impl Default for OsType {
    fn default() -> OsType {
        Self::Unknown
    }
}



