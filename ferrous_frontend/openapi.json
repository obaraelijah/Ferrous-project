{"openapi":"3.0.3","info":{"title":"kraken","description":"The core component of kraken-project","contact":{"name":"Niklas Pfister","email":"git@omikron.dev"},"license":{"name":"AGPL-3.0"},"version":"0.1.0"},"paths":{"/api/v1/admin/leeches":{"get":{"tags":["Leech management"],"summary":"Retrieve all leeches","description":"Retrieve all leeches","operationId":"get_all_leeches","responses":{"200":{"description":"Matched leeches","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetLeechResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"post":{"tags":["Leech management"],"summary":"Create a leech","description":"Create a leech\n\nThe `name` parameter must be unique.\n\n`address` must be a valid address including a scheme and port.\nCurrently only https and http are supported as scheme.","operationId":"create_leech","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLeechRequest"}}},"required":true},"responses":{"200":{"description":"Leech got created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UuidResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/admin/leeches/{uuid}":{"get":{"tags":["Leech management"],"summary":"Retrieve a leech by its id","description":"Retrieve a leech by its id","operationId":"get_leech","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Matched leeches","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetLeech"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"put":{"tags":["Leech management"],"summary":"Update a leech by its id","description":"Update a leech by its id\n\nAll parameter are optional, but at least one of them must be specified.\n\n`address` must be a valid address including a scheme and port.\nCurrently only https and http are supported as scheme.","operationId":"update_leech","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateLeechRequest"}}},"required":true},"responses":{"200":{"description":"Leech got updated"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"delete":{"tags":["Leech management"],"summary":"Delete a leech by its uuid","description":"Delete a leech by its uuid","operationId":"delete_leech","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Leech got deleted"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/admin/users":{"get":{"tags":["User Admin Management"],"summary":"Retrieve all users","description":"Retrieve all users","operationId":"get_all_users","responses":{"200":{"description":"Returns all users","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetUserResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"post":{"tags":["User Admin Management"],"summary":"Create a user","description":"Create a user","operationId":"create_user","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserRequest"}}},"required":true},"responses":{"200":{"description":"User got created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/admin/users/{uuid}":{"get":{"tags":["User Admin Management"],"summary":"Retrieve a user by its uuid","description":"Retrieve a user by its uuid","operationId":"get_user","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns the user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetUser"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"delete":{"tags":["User Admin Management"],"summary":"Delete a user by its uuid","description":"Delete a user by its uuid","operationId":"delete_user","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"User got deleted"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/admin/workspaces":{"get":{"tags":["Admin Workspaces"],"summary":"Retrieve all workspaces","description":"Retrieve all workspaces","operationId":"get_all_workspaces_admin","responses":{"200":{"description":"Returns all workspaces","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetWorkspaceResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/admin/workspaces/{uuid}":{"get":{"tags":["Admin Workspaces"],"summary":"Retrieve a workspace by id","description":"Retrieve a workspace by id","operationId":"get_workspace_admin","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns the workspace with the given id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FullWorkspace"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/attacks/bruteforceSubdomains":{"post":{"tags":["Attacks"],"summary":"Bruteforce subdomains through a DNS wordlist attack","description":"Bruteforce subdomains through a DNS wordlist attack\n\nEnumerate possible subdomains by querying a DNS server with constructed domains.\nSee [OWASP](https://owasp.org/www-community/attacks/Brute_force_attack) for further information.","operationId":"bruteforce_subdomains","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BruteforceSubdomainsRequest"}}},"required":true},"responses":{"200":{"description":"Attack scheduled","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UuidResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/attacks/queryCertificateTransparency":{"post":{"tags":["Attacks"],"summary":"Query a certificate transparency log collector.","description":"Query a certificate transparency log collector.\n\nFor further information, see [the explanation](https://certificate.transparency.dev/).\n\nCertificate transparency can be used to find subdomains or related domains.\n\n`retry_interval` is specified in milliseconds.","operationId":"query_certificate_transparency","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryCertificateTransparencyRequest"}}},"required":true},"responses":{"202":{"description":"Attack scheduled","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UuidResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/attacks/scanTcpPorts":{"post":{"tags":["Attacks"],"summary":"Start a tcp port scan","description":"Start a tcp port scan\n\n`exclude` accepts a list of ip networks in CIDR notation.\n\nAll intervals are interpreted in milliseconds. E.g. a `timeout` of 3000 means 3 seconds.\n\nSet `max_retries` to 0 if you don't want to try a port more than 1 time.","operationId":"scan_tcp_ports","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScanTcpPortsRequest"}}},"required":true},"responses":{"202":{"description":"Attack scheduled","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UuidResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/attacks/{uuid}":{"get":{"tags":["Attacks"],"summary":"Retrieve an attack by id","description":"Retrieve an attack by id","operationId":"get_attack","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns the attack","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SimpleAttack"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"delete":{"tags":["Attacks"],"summary":"Delete an attack and its results","description":"Delete an attack and its results","operationId":"delete_attack","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Attack was deleted"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/attacks/{uuid}/tcpPortScanResults":{"get":{"tags":["Attacks"],"summary":"Retrieve a tcp port scan's results by the attack's id","description":"Retrieve a tcp port scan's results by the attack's id","operationId":"get_tcp_port_scan_results","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"limit","in":"query","description":"Number of items to retrieve","required":true,"schema":{"type":"integer","format":"int64","minimum":0}},{"name":"offset","in":"query","description":"Position in the whole list to start retrieving from","required":true,"schema":{"type":"integer","format":"int64","minimum":0}}],"responses":{"200":{"description":"Returns attack's results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TcpPortScanResultsPage"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/auth/finishAuth":{"post":{"tags":["Authentication"],"summary":"Finishes the authentication with a security key","description":"Finishes the authentication with a security key\n\nUse `startAuth` to retrieve the challenge response data.","operationId":"finish_auth","requestBody":{"content":{"application/json":{"schema":{"type":"object"}}},"required":true},"responses":{"200":{"description":"2FA Authentication finished"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v1/auth/finishRegister":{"post":{"tags":["Authentication"],"summary":"Finish the registration of a security key","description":"Finish the registration of a security key\n\nUse `startRegister` to retrieve the challenge response data.","operationId":"finish_register","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FinishRegisterRequest"}}},"required":true},"responses":{"200":{"description":"2FA Key registration finished"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v1/auth/login":{"post":{"tags":["Authentication"],"summary":"Login to kraken","description":"Login to kraken","operationId":"login","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"200":{"description":"Login successful"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v1/auth/logout":{"get":{"tags":["Authentication"],"summary":"Log out of this session","description":"Log out of this session\n\nLogs a logged-in user out of his session.","operationId":"logout","responses":{"200":{"description":"Logout successful"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v1/auth/startAuth":{"post":{"tags":["Authentication"],"summary":"Starts the authentication with a security key","description":"Starts the authentication with a security key\n\nUse the `login` endpoint before calling this one.\n\nProceed with `finishAuth`.","operationId":"start_auth","responses":{"200":{"description":"2FA Authentication started","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v1/auth/startRegister":{"post":{"tags":["Authentication"],"summary":"Start the registration of a security key","description":"Start the registration of a security key\n\nProceed to the `finishRegister` endpoint.","operationId":"start_register","responses":{"200":{"description":"2FA Key registration started","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v1/auth/test":{"get":{"tags":["Authentication"],"summary":"Test the current login state","description":"Test the current login state\n\nYou can use this endpoint to test the current login state of your client.\n\nIf logged in, a 200 without a body is returned.","operationId":"test","responses":{"200":{"description":"Logged in"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v1/reporting/{uuid}":{"get":{"tags":["Reporting data export"],"summary":"Retrieve a workspace's attack results","description":"Retrieve a workspace's attack results","operationId":"report_workspace_results","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns the user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReportingWorkspaceResults"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"bearer_token":[]}]}},"/api/v1/users/me":{"get":{"tags":["User Management"],"summary":"Retrieve the own user","description":"Retrieve the own user","operationId":"get_me","responses":{"200":{"description":"Returns the own user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetUser"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"put":{"tags":["User Management"],"summary":"Updates the own user","description":"Updates the own user\n\nAll parameters are optional, but at least one of them must be supplied.","operationId":"update_me","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateMeRequest"}}},"required":true},"responses":{"200":{"description":"Changes were applied"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/users/setPassword":{"post":{"tags":["User Management"],"summary":"Set a new password","description":"Set a new password","operationId":"set_password","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetPasswordRequest"}}},"required":true},"responses":{"200":{"description":"Password was updated"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/workspaces":{"get":{"tags":["Workspaces"],"summary":"Retrieve all workspaces owned by executing user","description":"Retrieve all workspaces owned by executing user\n\nFor administration access, look at the `/admin/workspaces` endpoint.","operationId":"get_all_workspaces","responses":{"200":{"description":"Returns all workspaces owned by the executing user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetWorkspaceResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"post":{"tags":["Workspaces"],"summary":"Create a new workspace","description":"Create a new workspace","operationId":"create_workspace","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWorkspaceRequest"}}},"required":true},"responses":{"200":{"description":"Workspace was created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UuidResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/workspaces/{uuid}":{"get":{"tags":["Workspaces"],"summary":"Retrieve a workspace by id","description":"Retrieve a workspace by id","operationId":"get_workspace","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns the workspace","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FullWorkspace"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"put":{"tags":["Workspaces"],"summary":"Updates a workspace by its id","description":"Updates a workspace by its id\n\nAll parameter are optional, but at least one of them must be specified.\n\n`name` must not be empty.\n\nYou can set `description` to null to remove the description from the database.\nIf you leave the parameter out, the description will remain unchanged.","operationId":"update_workspace","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateWorkspaceRequest"}}},"required":true},"responses":{"200":{"description":"Workspace got updated"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]},"delete":{"tags":["Workspaces"],"summary":"Delete a workspace by its id","description":"Delete a workspace by its id","operationId":"delete_workspace","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Workspace was deleted"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}},"/api/v1/ws":{"get":{"tags":["Websocket"],"summary":"Start a websocket connection","description":"Start a websocket connection\n\nA heartbeat PING packet is sent constantly (every 10s).\nIf no response is retrieved within 30s of the last transmission, the socket\nwill be closed.","operationId":"websocket","responses":{"101":{"description":"Websocket connection established"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"api_key":[]}]}}},"components":{"schemas":{"ApiErrorResponse":{"type":"object","description":"Representation of an error response\n\n`status_code` holds the error code, `message` a human readable description of the error","required":["status_code","message"],"properties":{"status_code":{"$ref":"#/components/schemas/ApiStatusCode"},"message":{"type":"string","example":"Error message will be here"}}},"ApiStatusCode":{"type":"integer","description":"This type holds all possible error types that can be returned by the API.\n\nNumbers between 1000 and 1999 (inclusive) are client errors that can be handled by the client.\nNumbers between 2000 and 2999 (inclusive) are server errors.","default":1000,"enum":[1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,2000,2001,2002,2003],"example":1000},"AttackTypeSchema":{"type":"string","description":"[Schema](ToSchema) version of [`AttackType`]","enum":["Undefined","BruteforceSubdomains","TcpPortScan","QueryCertificateTransparency"]},"BruteforceSubdomainsRequest":{"type":"object","description":"The settings of a subdomain bruteforce request","required":["leech_uuid","domain","wordlist_path","concurrent_limit","workspace_uuid"],"properties":{"leech_uuid":{"type":"string","format":"uuid"},"domain":{"type":"string","example":"example.com"},"wordlist_path":{"type":"string","example":"/opt/wordlists/Discovery/DNS/subdomains-top1million-5000.txt"},"concurrent_limit":{"type":"integer","format":"int32","example":20,"minimum":0},"workspace_uuid":{"type":"string","format":"uuid"}}},"CreateLeechRequest":{"type":"object","required":["name","address"],"properties":{"name":{"type":"string","example":"leech-01"},"address":{"type":"string","example":"https://10.13.37:8081"},"description":{"type":"string","example":"The first leech in a private net","nullable":true}}},"CreateUserRequest":{"type":"object","required":["username","display_name","password","admin"],"properties":{"username":{"type":"string","example":"user123"},"display_name":{"type":"string","example":"Anon"},"password":{"type":"string","example":"super-secure-password"},"admin":{"type":"boolean","example":true}}},"CreateUserResponse":{"type":"object","required":["uuid"],"properties":{"uuid":{"type":"string"}}},"CreateWorkspaceRequest":{"type":"object","required":["name"],"properties":{"name":{"type":"string","example":"secure-workspace"},"description":{"type":"string","example":"This workspace is super secure and should not be looked at!!","nullable":true}}},"FinishRegisterRequest":{"allOf":[{"type":"object"},{"type":"object","required":["name"],"properties":{"name":{"type":"string","example":"my-security-key-01"}}}]},"FullWorkspace":{"type":"object","description":"A full version of a workspace","required":["uuid","name","owner","attacks","members","created_at"],"properties":{"uuid":{"type":"string","format":"uuid"},"name":{"type":"string","example":"ultra-secure-workspace"},"description":{"type":"string","example":"This workspace is ultra secure and should not be looked at!!","nullable":true},"owner":{"$ref":"#/components/schemas/UserResponse"},"attacks":{"type":"array","items":{"$ref":"#/components/schemas/SimpleAttack"}},"members":{"type":"array","items":{"$ref":"#/components/schemas/UserResponse"}},"created_at":{"type":"string","format":"date-time"}}},"GetLeech":{"type":"object","required":["uuid","name","address"],"properties":{"uuid":{"type":"string","format":"uuid"},"name":{"type":"string","example":"leech-01"},"address":{"type":"string","example":"https://10.13.37.1:8081"}}},"GetLeechResponse":{"type":"object","required":["leeches"],"properties":{"leeches":{"type":"array","items":{"$ref":"#/components/schemas/GetLeech"}}}},"GetUser":{"type":"object","required":["uuid","username","display_name","admin","created_at"],"properties":{"uuid":{"type":"string","format":"uuid"},"username":{"type":"string","example":"user123"},"display_name":{"type":"string","example":"Anon"},"admin":{"type":"boolean","example":true},"created_at":{"type":"string","format":"date-time"},"last_login":{"type":"string","format":"date-time","nullable":true}}},"GetUserResponse":{"type":"object","required":["users"],"properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/GetUser"}}}},"GetWorkspaceResponse":{"type":"object","required":["workspaces"],"properties":{"workspaces":{"type":"array","items":{"$ref":"#/components/schemas/SimpleWorkspace"}}}},"LoginRequest":{"type":"object","required":["username","password"],"properties":{"username":{"type":"string","example":"user123"},"password":{"type":"string","example":"super-secure-password"}}},"PageParams":{"type":"object","required":["limit","offset"],"properties":{"limit":{"type":"integer","format":"int64","description":"Number of items to retrieve","example":50,"minimum":0},"offset":{"type":"integer","format":"int64","description":"Position in the whole list to start retrieving from","example":0,"minimum":0}}},"PortOrRange":{"oneOf":[{"type":"integer","format":"int32","example":8000,"minimum":0},{"type":"string","example":"1-1024"}]},"QueryCertificateTransparencyRequest":{"type":"object","description":"The settings to configure a certificate transparency request","required":["leech_uuid","target","include_expired","max_retries","retry_interval","workspace_uuid"],"properties":{"leech_uuid":{"type":"string","format":"uuid"},"target":{"type":"string","example":"example.com"},"include_expired":{"type":"boolean","example":true},"max_retries":{"type":"integer","format":"int32","example":3,"minimum":0},"retry_interval":{"type":"integer","format":"int64","example":500,"minimum":0},"workspace_uuid":{"type":"string","format":"uuid"}}},"ReportingIpPort":{"type":"object","required":["ip","port"],"properties":{"ip":{"type":"string","description":"Ip address (v4 or v6)","example":"10.13.37.1"},"port":{"type":"integer","format":"int32","description":"Port number","example":80,"minimum":0}}},"ReportingTcpPortScanAttack":{"type":"object","required":["uuid","created_at","finished_at","results"],"properties":{"uuid":{"type":"string","format":"uuid","description":"The attacks database uuid"},"created_at":{"type":"string","format":"date-time","description":"When the attack was created i.e. started"},"finished_at":{"type":"string","format":"date-time","description":"When the leech signaled to be finished with the attack"},"results":{"type":"array","items":{"$ref":"#/components/schemas/ReportingIpPort"},"description":"List of found (ip, port) - pairs"}}},"ReportingUser":{"type":"object","required":["uuid","username","display_name"],"properties":{"uuid":{"type":"string","format":"uuid","description":"The user's id"},"username":{"type":"string","description":"The user's login name","example":"james1337"},"display_name":{"type":"string","description":"The user's legal name","example":"James Smith"}}},"ReportingWorkspaceResults":{"type":"object","required":["tcp_port_scan_attacks","attacker"],"properties":{"tcp_port_scan_attacks":{"type":"array","items":{"$ref":"#/components/schemas/ReportingTcpPortScanAttack"},"description":"List of all tcp port scan attacks"},"attacker":{"type":"array","items":{"$ref":"#/components/schemas/ReportingUser"},"description":"List of user which started attacks in this workspace"}}},"ScanTcpPortsRequest":{"type":"object","description":"The settings to configure a tcp port scan","required":["leech_uuid","targets","exclude","ports","retry_interval","max_retries","timeout","concurrent_limit","skip_icmp_check","workspace_uuid"],"properties":{"leech_uuid":{"type":"string","format":"uuid"},"targets":{"type":"array","items":{"type":"string"},"example":["10.13.37.1","10.13.37.2","10.13.37.50"]},"exclude":{"type":"array","items":{"type":"string"},"example":["10.13.37.252/30"]},"ports":{"type":"array","items":{"$ref":"#/components/schemas/PortOrRange"}},"retry_interval":{"type":"integer","format":"int64","example":100,"minimum":0},"max_retries":{"type":"integer","format":"int32","example":2,"minimum":0},"timeout":{"type":"integer","format":"int64","example":3000,"minimum":0},"concurrent_limit":{"type":"integer","format":"int32","example":5000,"minimum":0},"skip_icmp_check":{"type":"boolean","example":false},"workspace_uuid":{"type":"string","format":"uuid"}}},"SetPasswordRequest":{"type":"object","required":["current_password","new_password"],"properties":{"current_password":{"type":"string","example":"super-secure-password"},"new_password":{"type":"string","example":"ultra-secure-password!1!1!"}}},"SimpleAttack":{"type":"object","description":"A simple version of an attack","required":["uuid","workspace_uuid","attack_type","started_from","created_at"],"properties":{"uuid":{"type":"string","format":"uuid"},"workspace_uuid":{"type":"string","format":"uuid"},"attack_type":{"$ref":"#/components/schemas/AttackTypeSchema"},"started_from":{"$ref":"#/components/schemas/UserResponse"},"finished_at":{"type":"string","format":"date-time","nullable":true},"created_at":{"type":"string","format":"date-time"}}},"SimpleTcpPortScanResult":{"type":"object","required":["uuid","attack","created_at","address","port"],"properties":{"uuid":{"type":"string","format":"uuid"},"attack":{"type":"string","format":"uuid"},"created_at":{"type":"string","format":"date-time"},"address":{"type":"string"},"port":{"type":"integer","format":"int32","minimum":0}}},"SimpleWorkspace":{"type":"object","description":"A simple version of a workspace","required":["uuid","name","owner","created_at"],"properties":{"uuid":{"type":"string","format":"uuid"},"name":{"type":"string","example":"ultra-secure-workspace"},"description":{"type":"string","example":"This workspace is ultra secure and should not be looked at!!","nullable":true},"owner":{"$ref":"#/components/schemas/UserResponse"},"created_at":{"type":"string","format":"date-time"}}},"TcpPortScanResultsPage":{"type":"object","required":["items","limit","offset","total"],"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/SimpleTcpPortScanResult"},"description":"The page's items"},"limit":{"type":"integer","format":"int64","description":"The limit this page was retrieved with","example":50,"minimum":0},"offset":{"type":"integer","format":"int64","description":"The offset this page was retrieved with","example":0,"minimum":0},"total":{"type":"integer","format":"int64","description":"The total number of items this page is a subset of","minimum":0}}},"UpdateLeechRequest":{"type":"object","properties":{"name":{"type":"string","example":"leech-01","nullable":true},"address":{"type":"string","example":"https://10.13.37.1:8081","nullable":true},"description":{"type":"string","example":"First leech in a private network","nullable":true}}},"UpdateMeRequest":{"type":"object","properties":{"username":{"type":"string","example":"cyber-user-123","nullable":true},"display_name":{"type":"string","example":"Cyberhacker","nullable":true}}},"UpdateWorkspaceRequest":{"type":"object","description":"The request type to update a workspace\n\nAll parameter are optional, but at least one of them must be specified","properties":{"name":{"type":"string","example":"Workspace for work","nullable":true},"description":{"type":"string","example":"This workspace is for work and for work only!","nullable":true}}},"UserResponse":{"type":"object","description":"This struct holds the user information.\n\nNote that `username` is unique, but as it is changeable,\nidentify the user by its `uuid`","required":["uuid","username","display_name"],"properties":{"uuid":{"type":"string","format":"uuid"},"username":{"type":"string","example":"user123"},"display_name":{"type":"string","example":"Anon"}}},"UuidResponse":{"type":"object","description":"A common response that contains a single uuid","required":["uuid"],"properties":{"uuid":{"type":"string","format":"uuid"}}}},"securitySchemes":{"api_key":{"type":"apiKey","in":"cookie","name":"id"},"bearer_token":{"type":"http","scheme":"bearer"}}}}