/* tslint:disable */
/* eslint-disable */
/**
 * ferrous
 * The core component of ferrous-project
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface QueryCertificateTransparencyRequest
 */
export interface QueryCertificateTransparencyRequest {
    /**
     * 
     * @type {number}
     * @memberof QueryCertificateTransparencyRequest
     */
    leechId: number;
    /**
     * 
     * @type {string}
     * @memberof QueryCertificateTransparencyRequest
     */
    target: string;
    /**
     * 
     * @type {boolean}
     * @memberof QueryCertificateTransparencyRequest
     */
    includeExpired: boolean;
    /**
     * 
     * @type {number}
     * @memberof QueryCertificateTransparencyRequest
     */
    maxRetries: number;
    /**
     * 
     * @type {number}
     * @memberof QueryCertificateTransparencyRequest
     */
    retryInterval: number;
}

export function QueryCertificateTransparencyRequestFromJSON(json: any): QueryCertificateTransparencyRequest {
    return QueryCertificateTransparencyRequestFromJSONTyped(json, false);
}

export function QueryCertificateTransparencyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryCertificateTransparencyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'leechId': json['leech_id'],
        'target': json['target'],
        'includeExpired': json['include_expired'],
        'maxRetries': json['max_retries'],
        'retryInterval': json['retry_interval'],
    };
}

export function QueryCertificateTransparencyRequestToJSON(value?: QueryCertificateTransparencyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'leech_id': value.leechId,
        'target': value.target,
        'include_expired': value.includeExpired,
        'max_retries': value.maxRetries,
        'retry_interval': value.retryInterval,
    };
}
