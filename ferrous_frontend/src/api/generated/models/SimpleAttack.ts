/* tslint:disable */
/* eslint-disable */
/**
 * ferrous
 * The core component of ferrous-project
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttackType } from './AttackType';
import {
    AttackTypeFromJSON,
    AttackTypeFromJSONTyped,
    AttackTypeToJSON,
} from './AttackType';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
} from './UserResponse';

/**
 * A simple version of an attack
 * @export
 * @interface SimpleAttack
 */
export interface SimpleAttack {
    /**
     * 
     * @type {string}
     * @memberof SimpleAttack
     */
    uuid: string;
    /**
     * 
     * @type {string}
     * @memberof SimpleAttack
     */
    workspaceUuid: string;
    /**
     * 
     * @type {AttackType}
     * @memberof SimpleAttack
     */
    attackType: AttackType;
    /**
     * 
     * @type {UserResponse}
     * @memberof SimpleAttack
     */
    startedFrom: UserResponse;
    /**
     * 
     * @type {Date}
     * @memberof SimpleAttack
     */
    finishedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof SimpleAttack
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the SimpleAttack interface.
 */
export function instanceOfSimpleAttack(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "workspaceUuid" in value;
    isInstance = isInstance && "attackType" in value;
    isInstance = isInstance && "startedFrom" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function SimpleAttackFromJSON(json: any): SimpleAttack {
    return SimpleAttackFromJSONTyped(json, false);
}

export function SimpleAttackFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimpleAttack {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'uuid': json['uuid'],
        'workspaceUuid': json['workspace_uuid'],
        'attackType': AttackTypeFromJSON(json['attack_type']),
        'startedFrom': UserResponseFromJSON(json['started_from']),
        'finishedAt': !exists(json, 'finished_at') ? undefined : (json['finished_at'] === null ? null : new Date(json['finished_at'])),
        'createdAt': (new Date(json['created_at'])),
    };
}

export function SimpleAttackToJSON(value?: SimpleAttack | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'uuid': value.uuid,
        'workspace_uuid': value.workspaceUuid,
        'attack_type': AttackTypeToJSON(value.attackType),
        'started_from': UserResponseToJSON(value.startedFrom),
        'finished_at': value.finishedAt === undefined ? undefined : (value.finishedAt === null ? null : value.finishedAt.toISOString()),
        'created_at': (value.createdAt.toISOString()),
    };
}