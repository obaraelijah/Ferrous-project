/* tslint:disable */
/* eslint-disable */
/**
 * ferrous
 * The core component of ferrous-project
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The request to start a service detection
 * @export
 * @interface ServiceDetectionRequest
 */
export interface ServiceDetectionRequest {
    /**
     * If missing - a random leech is chosen
     * @type {string}
     * @memberof ServiceDetectionRequest
     */
    leechUuid?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ServiceDetectionRequest
     */
    address: string;
    /**
     * 
     * @type {number}
     * @memberof ServiceDetectionRequest
     */
    port: number;
    /**
     * 
     * @type {number}
     * @memberof ServiceDetectionRequest
     */
    timeout: number;
    /**
     * 
     * @type {string}
     * @memberof ServiceDetectionRequest
     */
    workspaceUuid: string;
}

/**
 * Check if a given object implements the ServiceDetectionRequest interface.
 */
export function instanceOfServiceDetectionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "port" in value;
    isInstance = isInstance && "timeout" in value;
    isInstance = isInstance && "workspaceUuid" in value;

    return isInstance;
}

export function ServiceDetectionRequestFromJSON(json: any): ServiceDetectionRequest {
    return ServiceDetectionRequestFromJSONTyped(json, false);
}

export function ServiceDetectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceDetectionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'leechUuid': !exists(json, 'leech_uuid') ? undefined : json['leech_uuid'],
        'address': json['address'],
        'port': json['port'],
        'timeout': json['timeout'],
        'workspaceUuid': json['workspace_uuid'],
    };
}

export function ServiceDetectionRequestToJSON(value?: ServiceDetectionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'leech_uuid': value.leechUuid,
        'address': value.address,
        'port': value.port,
        'timeout': value.timeout,
        'workspace_uuid': value.workspaceUuid,
    };
}
