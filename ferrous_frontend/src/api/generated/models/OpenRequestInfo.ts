/* tslint:disable */
/* eslint-disable */
/**
 * ferrous
 * The core component of ferrous-project
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SimpleOauthClient } from './SimpleOauthClient';
import {
    SimpleOauthClientFromJSON,
    SimpleOauthClientFromJSONTyped,
    SimpleOauthClientToJSON,
} from './SimpleOauthClient';
import type { SimpleWorkspace } from './SimpleWorkspace';
import {
    SimpleWorkspaceFromJSON,
    SimpleWorkspaceFromJSONTyped,
    SimpleWorkspaceToJSON,
} from './SimpleWorkspace';

/**
 * The information about an oauth request
 * @export
 * @interface OpenRequestInfo
 */
export interface OpenRequestInfo {
    /**
     * 
     * @type {SimpleWorkspace}
     * @memberof OpenRequestInfo
     */
    workspace: SimpleWorkspace;
    /**
     * 
     * @type {SimpleOauthClient}
     * @memberof OpenRequestInfo
     */
    oauthApplication: SimpleOauthClient;
}

/**
 * Check if a given object implements the OpenRequestInfo interface.
 */
export function instanceOfOpenRequestInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "workspace" in value;
    isInstance = isInstance && "oauthApplication" in value;

    return isInstance;
}

export function OpenRequestInfoFromJSON(json: any): OpenRequestInfo {
    return OpenRequestInfoFromJSONTyped(json, false);
}

export function OpenRequestInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenRequestInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'workspace': SimpleWorkspaceFromJSON(json['workspace']),
        'oauthApplication': SimpleOauthClientFromJSON(json['oauth_application']),
    };
}

export function OpenRequestInfoToJSON(value?: OpenRequestInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'workspace': SimpleWorkspaceToJSON(value.workspace),
        'oauth_application': SimpleOauthClientToJSON(value.oauthApplication),
    };
}
