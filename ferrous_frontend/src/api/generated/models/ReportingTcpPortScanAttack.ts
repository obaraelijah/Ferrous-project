/* tslint:disable */
/* eslint-disable */
/**
 * ferrous
 * The core component of ferrous-project
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReportingIpPort } from './ReportingIpPort';
import {
    ReportingIpPortFromJSON,
    ReportingIpPortFromJSONTyped,
    ReportingIpPortToJSON,
} from './ReportingIpPort';

/**
 * 
 * @export
 * @interface ReportingTcpPortScanAttack
 */
export interface ReportingTcpPortScanAttack {
    /**
     * The attacks database id
     * @type {number}
     * @memberof ReportingTcpPortScanAttack
     */
    id: number;
    /**
     * When the attack was created i.e. started
     * @type {Date}
     * @memberof ReportingTcpPortScanAttack
     */
    createdAt: Date;
    /**
     * When the leech signaled to be finished with the attack
     * @type {Date}
     * @memberof ReportingTcpPortScanAttack
     */
    finishedAt: Date;
    /**
     * List of found (ip, port) - pairs
     * @type {Array<ReportingIpPort>}
     * @memberof ReportingTcpPortScanAttack
     */
    results: Array<ReportingIpPort>;
}

/**
 * Check if a given object implements the ReportingTcpPortScanAttack interface.
 */
export function instanceOfReportingTcpPortScanAttack(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "finishedAt" in value;
    isInstance = isInstance && "results" in value;

    return isInstance;
}

export function ReportingTcpPortScanAttackFromJSON(json: any): ReportingTcpPortScanAttack {
    return ReportingTcpPortScanAttackFromJSONTyped(json, false);
}

export function ReportingTcpPortScanAttackFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportingTcpPortScanAttack {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'finishedAt': (new Date(json['finished_at'])),
        'results': ((json['results'] as Array<any>).map(ReportingIpPortFromJSON)),
    };
}

export function ReportingTcpPortScanAttackToJSON(value?: ReportingTcpPortScanAttack | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'finished_at': (value.finishedAt.toISOString()),
        'results': ((value.results as Array<any>).map(ReportingIpPortToJSON)),
    };
}
