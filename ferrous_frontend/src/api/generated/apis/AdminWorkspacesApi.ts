/* tslint:disable */
/* eslint-disable */
/**
 * ferrous
 * The core component of ferrous-project
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
    ApiErrorResponse,
    FullWorkspace,
    GetWorkspaceResponse,
  } from '../models';
import {
    ApiErrorResponseFromJSON,
    ApiErrorResponseToJSON,
    FullWorkspaceFromJSON,
    FullWorkspaceToJSON,
    GetWorkspaceResponseFromJSON,
    GetWorkspaceResponseToJSON,
} from '../models';

export interface GetWorkspaceAdminRequest {
    id: number;
}

/**
 * 
 */
export class AdminWorkspacesApi extends runtime.BaseAPI {

    /**
     * Retrieve all workspaces
     * Retrieve all workspaces
     */
    async getAllWorkspacesAdminRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetWorkspaceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/admin/workspaces`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetWorkspaceResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve all workspaces
     * Retrieve all workspaces
     */
    async getAllWorkspacesAdmin(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetWorkspaceResponse> {
        const response = await this.getAllWorkspacesAdminRaw(initOverrides);
        return await response.value();
    }

    /**
     * Retrieve a workspace by id
     * Retrieve a workspace by id
     */
    async getWorkspaceAdminRaw(requestParameters: GetWorkspaceAdminRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FullWorkspace>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {    
        throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getWorkspaceAdmin.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/admin/workspaces/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FullWorkspaceFromJSON(jsonValue));
    }

    /**
     * Retrieve a workspace by id
     * Retrieve a workspace by id
     */
    async getWorkspaceAdmin(requestParameters: GetWorkspaceAdminRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FullWorkspace> {
        const response = await this.getWorkspaceAdminRaw(requestParameters, initOverrides);
        return await response.value();
    }

}